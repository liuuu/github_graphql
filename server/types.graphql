# The following types define the data model of the example service
# based on which the GraphQL API is generated



# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
#
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }

type User @model {
  id: ID! @isUnique # required system field (read-only)
  createdAt: DateTime! # optional system field (read-only)
  updatedAt: DateTime! # optional system field (read-only)
  email: String! @isUnique # for authentication
  password: String! # for authentication
  name: String!
  links: [Link!]! @relation(name: "UsersLinks")
  votes: [Vote!]! @relation(name: "UsersVotes")
}

# temporary use 
type Link @model {
  id: ID! @isUnique # required system field (read-only)
  createdAt: DateTime! # optional system field (read-only)
  updatedAt: DateTime! # optional system field (read-only)
  description: String!
  url: String!
  postedBy: User! @relation(name: "UsersLinks")
  votes: [Vote!]! @relation(name: "VotesOnLink")
}

type Vote @model {
  id: ID! @isUnique # required system field (read-only)
  createdAt: DateTime! # optional system field (read-only)
  user: User! @relation(name: "UsersVotes")
  link: Link! @relation(name: "VotesOnLink")
}
